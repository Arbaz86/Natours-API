{"mappings":"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","sources":["public/js/index.js","public/js/login.js","public/js/alert.js","public/js/updateSettings.js","public/js/signup.js","public/js/stripe.js"],"sourcesContent":["import { login, logout } from \"./login\";\r\nimport { updateSettings } from \"./updateSettings\";\r\nimport { signup } from \"./signup\";\r\nimport { bookTour } from \"./stripe\";\r\n\r\n// Selecting the form element using its class name\r\nconst loginForm = document.querySelector(\".form--login\");\r\nconst logOutBtn = document.querySelector(\".nav__el--logout\");\r\nconst signupBtn = document.querySelector(\".form--signup\");\r\nconst userDataForm = document.querySelector(\".form-user-data\");\r\nconst userPasswordForm = document.querySelector(\".form-user-password\");\r\nconst bookBtn = document.getElementById(\"book-tour\");\r\n\r\nif (loginForm) {\r\n  // Adding an event listener to the form for the submit event\r\n  loginForm.addEventListener(\"submit\", (e) => {\r\n    // Preventing the default form submission behavior\r\n    e.preventDefault();\r\n\r\n    // Getting the email and password values from the form inputs\r\n    let email = loginForm.email.value;\r\n    let password = loginForm.password.value;\r\n\r\n    // Calling the login function with email and password values\r\n    login(email, password);\r\n  });\r\n}\r\n\r\nif (logOutBtn) logOutBtn.addEventListener(\"click\", logout);\r\n\r\nif (signupBtn) {\r\n  signupBtn.addEventListener(\"submit\", (e) => {\r\n    // Preventing the default form submission behavior\r\n    e.preventDefault();\r\n\r\n    // Getting the name, email, password and passwordConfirm values from the form inputs\r\n    let name = signupBtn.name.value;\r\n    let email = signupBtn.email.value;\r\n    let password = signupBtn.password.value;\r\n    let passwordConfirm = signupBtn.passwordConfirm.value;\r\n\r\n    // Calling the signup function with name, email, password and passwordConfirm values\r\n    signup({ name, email, password, passwordConfirm });\r\n  });\r\n}\r\n\r\nif (userDataForm) {\r\n  userDataForm.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n\r\n    // Getting the name, email and photo values from the form inputs\r\n    const formData = new FormData();\r\n    formData.append(\"name\", userDataForm.name.value);\r\n    formData.append(\"email\", userDataForm.email.value);\r\n    formData.append(\"photo\", userDataForm.photo.files[0]);\r\n\r\n    // Calling the updateData function with name and email values\r\n    updateSettings(formData, \"data\");\r\n  });\r\n}\r\nif (userPasswordForm) {\r\n  userPasswordForm.addEventListener(\"submit\", async (e) => {\r\n    e.preventDefault();\r\n    document.querySelector(\".btn--save-password\").innerHTML = \"Updating...\";\r\n\r\n    // Getting the password-current, password and password-confirm values from the form inputs\r\n    let passwordCurrent = userPasswordForm[\"password-current\"].value;\r\n    let password = userPasswordForm[\"password\"].value;\r\n    let passwordConfirm = userPasswordForm[\"password-confirm\"].value;\r\n\r\n    // Calling the updateData function with password-current, password and password-confirm values\r\n    await updateSettings(\r\n      { passwordCurrent, password, passwordConfirm },\r\n      \"password\"\r\n    );\r\n\r\n    document.querySelector(\".btn--save-password\").innerHTML = \"Save Password\";\r\n\r\n    passwordCurrent = userPasswordForm[\"password-current\"].value = \"\";\r\n    password = userPasswordForm[\"password\"].value = \"\";\r\n    passwordConfirm = userPasswordForm[\"password-confirm\"].value = \"\";\r\n  });\r\n}\r\n\r\nif (bookBtn) {\r\n  bookBtn.addEventListener(\"click\", (e) => {\r\n    e.target.textContent = \"Processing...\";\r\n    const { tourId } = e.target.dataset;\r\n    console.log(tourId);\r\n\r\n    bookTour(tourId);\r\n  });\r\n}\r\n","import { showAlert } from \"./alert\";\r\n\r\n// Defining a function to handle login\r\nexport const login = async (email, password) => {\r\n  // Logging the email and password to the console\r\n  console.log({ email, password });\r\n\r\n  try {\r\n    // Sending a POST request to the login endpoint with email and password in the request body\r\n    const res = await fetch(\r\n      \"https://natours-api-z82r.onrender.com/api/v1/users/login\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email,\r\n          password,\r\n        }),\r\n      }\r\n    );\r\n\r\n    // Parsing the response data\r\n    let data = await res.json();\r\n\r\n    // Logging the response data to the console\r\n    console.log(data);\r\n\r\n    // Showing an alert message if the login was successful and redirecting to the home page\r\n    if (data.status === \"success\") {\r\n      showAlert(\"success\", \"Logged in Successfully!\");\r\n\r\n      setTimeout(() => {\r\n        location.assign(\"/\");\r\n      }, 1500);\r\n    } else {\r\n      // Showing an alert message with the error message if the login failed\r\n      showAlert(\"error\", data.message);\r\n    }\r\n  } catch (error) {\r\n    // Showing an alert message with the error message if there was an error while sending the request\r\n    showAlert(\"error\", error.message);\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const logout = async () => {\r\n  try {\r\n    const res = await fetch(\r\n      \"https://natours-api-z82r.onrender.com/api/v1/users/logout\"\r\n    );\r\n    const data = await res.json();\r\n\r\n    console.log(data);\r\n\r\n    if (data.status === \"success\") {\r\n      showAlert(\"success\", \"Logged Out Successfully!\");\r\n      location.reload();\r\n    }\r\n  } catch (error) {\r\n    showAlert(\"error\", \"Error logging out! Try again.\");\r\n  }\r\n};\r\n","export const hideAlert = () => {\r\n  const el = document.querySelector(\".alert\");\r\n  if (el) el.parentElement.removeChild(el);\r\n};\r\n\r\n// type is 'success' or 'error'\r\nexport const showAlert = (type, message) => {\r\n  hideAlert();\r\n  const markup = `<div class=\"alert alert--${type}\" >${message}</div>`;\r\n  document.querySelector(\"body\").insertAdjacentHTML(\"afterbegin\", markup);\r\n\r\n  setTimeout(() => {\r\n    hideAlert();\r\n  }, 5000);\r\n};\r\n","import { showAlert } from \"./alert\"; // Importing a function named \"showAlert\" from a local file named \"alert\"\r\n\r\n// Defining a function named \"updateSettings\" that takes two parameters: \"data\" and \"type\"\r\nexport const updateSettings = async (data, type) => {\r\n  try {\r\n    const endpoint = type === \"password\" ? \"updateMyPassword\" : \"updateMe\"; // Creating a variable named \"endpoint\" based on the value of the \"type\" parameter\r\n\r\n    const headers = // Creating a variable named \"headers\" based on the value of the \"type\" parameter\r\n      type === \"password\" ? { \"Content-Type\": \"application/json\" } : {};\r\n\r\n    const res = await fetch(\r\n      `https://natours-api-z82r.onrender.com/api/v1/users/${endpoint}`,\r\n      {\r\n        // Sending a PATCH request to the server to update the user's data\r\n        method: \"PATCH\",\r\n        headers,\r\n        body: type === \"password\" ? JSON.stringify(data) : data,\r\n      }\r\n    );\r\n\r\n    const resData = await res.json(); // Parsing the response data as JSON and assigning it to a variable named \"resData\"\r\n\r\n    // Extracting status and message from resData using destructuring assignment\r\n    const { status, message } = resData;\r\n\r\n    // If the server response status is \"success\"\r\n    if (status === \"success\") {\r\n      showAlert(\"success\", `${type.toUpperCase()} Updated Successfully!`); // Show a success message to the user\r\n\r\n      // Reload the page after successful update\r\n      setTimeout(() => {\r\n        location.reload(); // Reload the page after a delay of 1000 milliseconds (1 second)\r\n      }, 1000);\r\n    } else {\r\n      // If the server response status is not \"success\"\r\n      showAlert(\"error\", message); // Show an error message to the user\r\n    }\r\n  } catch (error) {\r\n    // If there is an error in the try block\r\n    showAlert(\"error\", error.message); // Show an error message to the user\r\n  }\r\n};\r\n","import { showAlert } from \"./alert\";\r\n\r\nexport const signup = async ({ name, email, password, passwordConfirm }) => {\r\n  console.log({ name, email, password, passwordConfirm });\r\n  try {\r\n    const res = await fetch(\r\n      \"https://natours-api-z82r.onrender.com/api/v1/users/signup\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ name, email, password, passwordConfirm }),\r\n      }\r\n    );\r\n\r\n    const data = await res.json();\r\n\r\n    if (data.status === \"success\") {\r\n      showAlert(\"success\", \"Signup Successfully!\");\r\n\r\n      setTimeout(() => {\r\n        location.assign(\"/\");\r\n      }, 500);\r\n    } else {\r\n      showAlert(\"error\", data.message);\r\n    }\r\n  } catch (error) {\r\n    showAlert(\"error\", error.message);\r\n  }\r\n};\r\n","import { showAlert } from \"./alert\";\r\n\r\n// const stripe = Stripe(\r\n//   \"pk_test_51N1T9nSFVPq5h09idp6f91aEyLa1LuYS0GHBUf69WiDHnhABgy2kljo1iV35PYk1FJGU3lAHbCl1JR9l4B4KjgEP00UTFbcsdY\"\r\n// );\r\n\r\nexport const bookTour = async (tourId) => {\r\n  // 1) Get checkout session from API\r\n  try {\r\n    const res = await fetch(\r\n      `https://natours-api-z82r.onrender.com/api/v1/bookings/checkout-session/${tourId}`\r\n    );\r\n\r\n    const session = await res.json();\r\n    const url = session?.session?.url;\r\n\r\n    if (session?.session?.url) {\r\n      window.location.href = url;\r\n    } else {\r\n      showAlert(\"error\", \"Something went wrong!\");\r\n    }\r\n  } catch (error) {\r\n    console.log(error.message);\r\n    showAlert(\"error\", error.message);\r\n  }\r\n\r\n  // 2) Create checkout form + chanre credit card\r\n};\r\n"],"names":[],"version":3,"file":"bundle.js.map","sourceRoot":"../../"}